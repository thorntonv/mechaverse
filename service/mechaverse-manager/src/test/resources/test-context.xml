<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
  ">

  <jdbc:embedded-database id="dataSource">
  </jdbc:embedded-database>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan" value="org.mechaverse.service.manager.api.model" />   
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
        <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
        <prop key="hibernate.show_sql">true</prop>
      </props>
    </property>
   
    <!-- Another way of indicating that we want to update the schema; Spring calls this _after_ the session 
      factory is created, while the hbm2ddl flag above is processed by Hibernate _during_ creation of the session 
      factory. <property name="schemaUpdate" value="true" /> -->
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <bean id="managerImpl" class="org.mechaverse.service.manager.MechaverseManagerImpl" />

  <tx:annotation-driven />

  <bean id="storageService" class="org.mockito.Mockito" factory-method="mock"> 
    <constructor-arg value="org.mechaverse.service.storage.api.MechaverseStorageService" /> 
  </bean> 

</beans>
